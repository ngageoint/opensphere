{
  "name": "opensphere",
  "version": "1.0.0",
  "description": "OpenSphere is a pluggable GIS web application that supports both 2D and 3D views.",
  "main": "index.js",
  "directories": {
    "src": "src",
    "test": "test",
    "externs": "externs",
    "scss": "scss",
    "views": "views"
  },
  "build": {
    "config": "config/settings.json",
    "gcc-src": [
      "src/**.js"
    ],
    "type": "app",
    "pluggable": true,
    "index": "index.js",
    "scss": "scss/opensphere.scss",
    "gcc": {
      "language_in": "ECMASCRIPT_2015",
      "externs": [
        "./node_modules/google-closure-compiler/contrib/externs/jquery-1.9.js",
        "./node_modules/google-closure-compiler/contrib/externs/angular-1.4-http-promise_templated.js",
        "./node_modules/google-closure-compiler/contrib/externs/angular-1.4-resource.js",
        "./node_modules/google-closure-compiler/contrib/externs/angular-1.4-q_templated.js",
        "./node_modules/openlayers/src/ol/typedefs.js",
        "./node_modules/openlayers/externs/closure-compiler.js",
        "./node_modules/openlayers/externs/geojson.js",
        "./node_modules/openlayers/externs/oli.js",
        "./node_modules/openlayers/externs/olx.js",
        "./node_modules/openlayers/externs/proj4js.js",
        "./node_modules/openlayers/externs/topojson.js",
        "./node_modules/ol-cesium/externs/olcsx.js"
      ],
      "entry_point": [
        "goog:osmain"
      ],
      "extra_annotation_name": [
        "api",
        "observable"
      ],
      "define": [
        "os.SETTINGS=config/settings.json"
      ],
      "hide_warnings_for": [
        ".build/",
        "/google-closure-library/",
        "/openlayers/",
        "/ol-cesium/"
      ]
    }
  },
  "scripts": {
    "apidoc": "npm run compile:resolve && npm run compile:gcc && npm run compile:dossier",
    "modernizr": "modernizr -c modernizr.config.json -u -d .build/modernizr.js",
    "test:gcc": "java -jar node_modules/google-closure-compiler/compiler.jar `cat .build/gcc-test-args`",
    "test:init": "npm run modernizr && npm run compile:resolve && npm run test:gcc",
    "test:debug": "karma start --browsers Chrome --reporters dots",
    "test:run": "karma start --single-run",
    "test": "npm run test:init && npm run test:run",
    "init:apidoc": "rimraf .build/*.conf.json dist/apidoc && mkdirp .build dist/apidoc",
    "init:base": "rimraf .build dist && mkdirp .build dist/opensphere",
    "init:debug": "rimraf index.html",
    "init:version": "echo dist/opensphere/v`date +%s` > .build/version",
    "init:vfolder": "mkdirp `cat .build/version`",
    "init": "npm run init:base && npm run init:debug && npm run init:version && npm run init:vfolder",
    "lint:css": "sass-lint -v -s scss -i 'scss/nolint/**/*.scss' 'scss/**/*.scss'",
    "lint:js": "eslint --cache 'src/**/*.js'",
    "lint": "npm run lint:js && npm run lint:css",
    "compile:jsdoc": "npm run init:apidoc && os-docs-gen-config jsdoc.conf.json .build/jsdoc.conf.json && jsdoc -c .build/jsdoc.conf.json",
    "compile:dossier": "npm run init:apidoc && os-docs-gen-config dossier.conf.json .build/dossier.conf.json && java -jar node_modules/js-dossier/dossier.jar -c .build/dossier.conf.json",
    "compile:resolve": "os-resolve .build --defineRoots `cat .build/version`",
    "compile:css": "node-sass --output-style compressed `cat .build/node-sass-args` > .build/opensphere.min.css",
    "compile:debugcss": "node-sass --source-map true -o .build --output-style expanded `cat .build/node-sass-args`",
    "compile:gcc": "java -jar node_modules/google-closure-compiler/compiler.jar `cat .build/gcc-java-args`",
    "postcompile:gcc": "echo \"//# sourceMappingURL=`pwd`/.build/opensphere.min.map\" >> .build/opensphere.min.js",
    "compile": "npm run compile:resolve && npm run compile:gcc && npm run compile:css && npm run compile:debugcss",
    "precopy:files": "mkdirp `cat .build/version`/styles && mkdirp dist/opensphere/test",
    "precopy:views": "mkdirp `cat .build/version`/views",
    "precopy:config": "mkdirp dist/opensphere/config",
    "precopy:resources": "xargs -n 1 mkdir -p < .build/resources-copy-dirs",
    "copy:files": "cp .build/opensphere.min.js `cat .build/version` && cp .build/opensphere.min.css `cat .build/version`/styles",
    "copy:images": "cp -r images `cat .build/version`/images",
    "copy:onboarding": "cp -r onboarding `cat .build/version`/onboarding",
    "copy:views": "xargs -n 1 -I @ sh -c 'cp -rf @ `cat .build/version`/views/.' < .build/copy-views-args",
    "copy:config": "cp .build/settings.json dist/opensphere/config",
    "copy:resources": "xargs -n 2 cp -r < .build/resources-copy-files",
    "copy": "npm run copy:files && npm run copy:images && npm run copy:onboarding && npm run copy:views && npm run copy:config && npm run copy:resources",
    "rename": "find dist -type f | xargs perl -pi -e \"s#{APP}#$(json admin.about.application < .build/settings.json)#g\"",
    "build": "npm run init && npm run lint && npm run modernizr && npm run compile && npm run copy && npm run build:index && npm run rename",
    "build:debug": "npm run init && npm run modernizr && npm run compile:resolve && npm run compile:debugcss && npm run build:debugindex",
    "build:index": "xargs -n 1 os-index < .build/resources-pages",
    "build:debugindex": "xargs -n 1 os-index --debug < .build/resources-pages",
    "build:xt": "mkdirp .build dist/opensphere; java -jar node_modules/google-closure-compiler/compiler.jar `cat src/os/xt/gcc-args`; cp src/os/xt/xt-example.html dist/opensphere",
    "package:update": "if git diff --name-only ORIG_HEAD HEAD | grep --quiet package.json; then npm install && npm update; fi",
    "perms": "chmod -R u+rwX,go+rX,go-w .",
    "commitmsg": "validate-commit-msg",
    "postmerge": "npm run package:update",
    "postrewrite": "npm run package:update"
  },
  "keywords": [
    "geospatial",
    "geo",
    "gis",
    "map",
    "mapping",
    "closure"
  ],
  "author": "William Wall <wwall@caci.com>",
  "maintainers": [
    "William Wall <wwall@caci.com>",
    "Kevin Schmidt <kschmidt@caci.com>",
    "Jeremy Salankey <jsalankey@caci.com>"
  ],
  "contributors": [
    "Claudia Bowman",
    "Brian Riedinger",
    "Brice Landry",
    "Jessica Denning",
    "Devon Raehal",
    "Doug Welch",
    "Ryan Fox",
    "Greg Royal",
    "Jason Stiles",
    "Jeremy Salankey",
    "Jessica Finnessy",
    "Kevin Schmidt",
    "Kurtis Golding",
    "Marx Thompson",
    "Michael Dougherty",
    "Noah Solomon",
    "Rebecca Buss",
    "Robert St. John",
    "Sean Tyler",
    "Thomas Hildesheim",
    "William Wall"
  ],
  "license": "Apache-2.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/ngageoint/opensphere.git"
  },
  "config": {
    "commitizen": {
      "path": "node_modules/cz-conventional-changelog"
    },
    "validate-commit-msg": {
      "helpMessage": "\nPlease fix your commit message (consider using 'npm i -g commitizen'). Well-formatted commit messages allow us to automate our changelog.\n\nExamples:\n\"fix(states): Fixed bug when parsing opacity from state files\"\n\"feat(timeline): Added support for an arbitrary number of ranges\"\n\nIf you have installed commitizen, try running 'git cz'."
    }
  },
  "devDependencies": {
    "angular-mocks": "~1.5.x",
    "conventional-changelog-cli": "^1.2.0",
    "conventional-recommended-bump": "^0.3.0",
    "cz-conventional-changelog": "^1.2.0",
    "eslint": "^3.19.0",
    "eslint-config-google": "^0.7.0",
    "eslint-config-opensphere": "^1.0.0",
    "eslint-plugin-google-camelcase": "^0.0.2",
    "eslint-plugin-opensphere": "^1.0.0",
    "google-closure-compiler": "^20170521.0.0",
    "husky": "^0.13.3",
    "jasmine-core": "^2.5.2",
    "js-dossier": "^0.12.0",
    "jsdoc": "^3.4.2",
    "json": "^9.0.4",
    "karma": "^1.3.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-coverage": "^1.1.1",
    "karma-jasmine": "^0.1.0",
    "karma-junit-reporter": "^1.1.0",
    "mkdirp": "^0.5.1",
    "node-sass": "=4.7.2",
    "opensphere-build-closure-helper": "^1.0.0",
    "opensphere-build-docs": "^1.0.0",
    "opensphere-build-index": "^1.0.0",
    "opensphere-build-resolver": "^1.0.0",
    "opensphere-state-schema": "^2.0.6",
    "replace": "^0.3.0",
    "rimraf": "^2.5.4",
    "sass-lint": "^1.9.1",
    "validate-commit-msg": "^2.8.2",
    "xmllint": "^0.1.1"
  },
  "dependencies": {
    "angular": "~1.5.x",
    "angular-animate": "~1.5.x",
    "angular-route": "~1.5.x",
    "angular-sanitize": "~1.5.x",
    "cesium": "=1.38.0",
    "compass-mixins": "^0.12.10",
    "crossfilter2": "^1.4.0-alpha.6",
    "d3": "^3.4.1",
    "font-awesome": "^4.6.3",
    "google-closure-library": "^20161201.0.0",
    "jquery": "^2.2.0",
    "jsts": "^1.5.0",
    "modernizr": "~3.3.x",
    "moment": "~2.8.3",
    "navigator.sendbeacon": "~0.0.x",
    "ol-cesium": "=1.32.0",
    "openlayers": "=4.4.2",
    "opensphere-asm": "^1.0.0",
    "papaparse": "~4.2.0",
    "platform": "~1.3.4",
    "proj4": "^2.3.17",
    "save-svg-as-png": "^1.1.0",
    "simplemde": "^1.11.2",
    "suncalc": "^1.8.0",
    "text-encoding": "^0.6.4"
  }
}
