// --------------------------------- Misc Utilities --------------------------------- //
$pointer-events-options: all, auto, none;
@each $option in $pointer-events-options {
  .u-pointer-events-#{$option} {
    pointer-events: $option;
  }
}

$overflow-options: auto, hidden, scroll;
@each $option in $overflow-options {
  .u-overflow-x-#{$option} {
    overflow-x: $option !important;
  }

  .u-overflow-y-#{$option} {
    overflow-y: $option !important;
  }
}

$user-select-options: all, auto, text, none;
@each $option in $user-select-options {
  .u-user-select-#{$option} {
    user-select: $option;
  }
}

.u-flex-basis-0 {
  flex-basis: 0% !important;
}

.u-word-wrap-break-all {
  word-break: break-all;
}

.u-word-wrap-break-word {
  word-wrap: break-word;
}

.u-pre {
  // Use default font family (bootstrap override)
  font-family: $font-family-sans-serif;

  // Dont shrink the font (bootstrap override)
  font-size: 100%;

  white-space: pre-wrap;
}

// Bootstrap by default puts a focus style around items. This turns that off
.u-focus-outline-none:focus {
  outline: none;
}

.u-cursor-grab {
  @include grab-cursor();
}

.u-cursor-grab.moving {
  @include grabbing-cursor();
}

.u-cursor-default {
  cursor: default;
}

.u-cursor-help {
  cursor: help;
}

.u-cursor-wait {
  cursor: wait !important;
}

.u-cursor-not-allowed {
  cursor: not-allowed !important;
};

.u-btn-separator {
  border-left: 1px solid $body-color;
  border-right: 1px solid $body-bg;
  display: inline-block;
  height: 19px;
  position: relative;
  top: 6px;
}

// Allows adding a count to a font-awesome icon
.u-fa-badge {
  position: relative;
}

.u-fa-badge[data-count]:after {
  background: darken($input-bg, 5%);
  border: 1px solid $border-color;
  border-radius: $border-radius;
  bottom: -55%;
  color: color-yiq(darken($input-bg, 5%));
  content: attr(data-count);
  font-size: 50%;
  opacity: .8;
  padding: .15rem .25rem;
  position: absolute;
  right: -55%;
  text-align: center;
}

.u-fa-badge-check:after {
  background: darken($input-bg, 5%);
  border-radius: $border-radius;
  bottom: -24%;
  color: $success;
  content: '\f00c';
  font-size: 70%;
  opacity: .8;
  padding: .05rem;
  position: absolute;
  right: -39%;
  text-align: center;
}

.u-fa-badge-times:after {
  background: darken($input-bg, 5%);
  border-radius: $border-radius;
  bottom: -24%;
  color: $danger;
  content: '\f00d';
  font-size: 70%;
  opacity: .8;
  padding: .08rem;
  position: absolute;
  right: -35%;
  text-align: center;
}

.u-link-style {
  @include hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  background-color: transparent; // Remove the gray background on active links in IE 10.
  color: $link-color;
  cursor: pointer;
  text-decoration: $link-decoration;

  &.nav-link {
    text-decoration: none;
  }
}

.u-text-stroke {
  text-shadow: -1px -1px 0 color-yiq($body-color), 1px -1px 0 color-yiq($body-color), -1px 1px 0 color-yiq($body-color), 1px 1px 0 color-yiq($body-color);
}

.u-text-decoration__line-through {
  text-decoration: line-through;
}

// --------------------------------- Font Utilities --------------------------------- //
.u-font-family-sans-serif {
  font-family: sans-serif;
}


// --------------------------------- Visibility Utilities --------------------------------- //
.u-opacity__95 {
  opacity: .95;
}


// --------------------------------- List Utilities --------------------------------- //
.u-column-count-4 {
  column-count: 4;

  &:not(.list-unstyled) {
    column-gap: 2.25rem;
  }
}


// --------------------------------- Table Utilities --------------------------------- //
// Tables in bootstrap are styled by elements.... not classes. Allow class styling
.u-table {
  &:not(.u-table__no-hover) .u-table__head,
  &:not(.u-table__no-hover) .u-table__row {
    @include hover {
      background-color: $list-group-hover-bg !important;
      color: color-yiq($list-group-hover-bg);

      a {
        color: color-yiq($list-group-hover-bg);
      }
    }
  }

  .u-table__head {
    background: $body-bg;
    color: color-yiq($body-bg);
  }

  .u-table__row {
    background-color: $table-bg;

    &.active {
      background-color: $list-group-active-bg !important;
      color: color-yiq($list-group-active-bg);
    }
  }

  &.u-table__selectable .u-table__row {
    cursor: pointer;
  }

  &.u-table-striped {
    .u-table__row:nth-child(odd) {
      background-color: $table-accent-bg;
    }
  }
}

.u-table-layout__fixed {
  table-layout: fixed;
}

.u-table__sortable-header {
  cursor: pointer;

  &:hover {
    border-bottom: 1px solid $primary;
  }
}

.u-nav-tabs__vertical.nav-tabs {
  border-bottom: 0;
  border-right: 1px solid $nav-tabs-border-color;
  display: flex;
  flex-flow: column nowrap;
  margin-left: $nav-link-padding-x;

  .nav-link {
    border-bottom-color: $nav-tabs-border-color;
    border-bottom-left-radius: $nav-tabs-border-radius;
    border-right-color: $body-bg;
    border-top-left-radius: $nav-tabs-border-radius;
    border-top-right-radius: 0;
    margin: 0;
    white-space: nowrap;

    &:not(.active) {
      border-right: 0;
      border-top-right-radius: 0;
    }

    &.active {
      background: $body-bg;
      border-right-color: $body-bg;
      margin-right: -1px;
    }

    &:hover {
      color: inherit;
    }
  }

  .nav-item + .nav-item {
    margin-top: .25rem;
  }
}

// --------------------------------- Form Utilities --------------------------------- //
.u-required:after {
  color: $danger;
  content: '*';
  font-size: $font-size-lg;
  position: absolute;
  top: .1 * $font-size-base;
}

.u-required.btn-group::after {
  right: .3rem;
}

.u-rounded-right-0 {
  border-bottom-right-radius: 0 !important;
  border-top-right-radius: 0 !important;
}

.u-rounded-left-0 {
  border-bottom-left-radius: 0 !important;
  border-top-left-radius: 0 !important;
}

.u-rounded-top-0 {
  border-top-left-radius: 0 !important;
  border-top-right-radius: 0 !important;
}

.u-rounded-bottom-0 {
  border-bottom-left-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}


// At certain breakpoints, forms look really bad (especially in modals. Lets adjust forms to takeup more of the screen)
// To use, just add u-form-vertical-at-<breakpoint>. (u-form-veritical-at-md).
// This will apply to all form-groups under this selector
@each $breakpoint in map-keys($grid-breakpoints) {
  // Add a media query at this breakpoint
  @include media-breakpoint-down($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .u-form-vertical-at-#{$breakpoint} {

      // Wrap all form groups to new lines
      .form-group {
        // sass-lint:disable-block no-extends
        flex-wrap: wrap;

        // Make all columns 100%
        %full-columns {
          flex-basis: 100%;
          max-width: 100%;
        }

        %no-margin-left {
          margin-left: 0;
        }

        // Remove padding for columns
        .col {
          @extend %full-columns;
        }

        @each $breakpoint in map-keys($grid-breakpoints) {
          $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
          @for $i from 1 through $grid-columns {
            .col#{$infix}-#{$i} {
              @extend %full-columns;
            }
          }

          // Make all offsets ignored
          @for $i from 0 through ($grid-columns - 1) {
            @if not ($infix == '' and $i == 0) { // Avoid emitting useless .offset-0
              .offset#{$infix}-#{$i} {
                @extend %no-margin-left;
              }
            }
          }
        }

        // Convert right aligned labels to be left aligned
        .text-right .col-form-label,
        .col-form-label.text-right {
          text-align: left !important;
        }

        .col-form-label.border-right {
          border-bottom: 1px solid $border-color;
          border-right: 0 !important;
        }
      }
    }
  }
}


// This block controls responsive behaviour with respect to a parent, and not the viewport
// The parent needs to adjust the class u-parent-resizer (see window.js)
$u-parent-resizer-count: 0;
@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  .u-parent-resizer-#{$breakpoint} {

    // these are all the fallback class overrides
    // i.e. no sm, md, lg etc in the class name
    @for $i from 1 through $grid-columns {
      .col-#{$i} {
        @include make-col($i, $grid-columns);
      }
    }

    .flex-row {
      flex-direction: row !important;
    }

    .flex-column {
      flex-direction: column !important;
    }

    // these are all the responsive class overrides
    // i.e. with sm, md, lg, etc in the class name
    // how this works is there are no responsive classes "above" the parent-resizer
    // so for u-parent-resizer-md there are col-xs-x, col-sm-x and col-md-x, but no col-lg-x
    // therefore, if an element has col-lg, that class override won't exist, and will
    // move down to the next override, or the fallback if there arent' any
    $u-parent-resizer-subcount: 0;
    @each $sub-breakpoint in map-keys($grid-breakpoints) {
      @if ($u-parent-resizer-count >= $u-parent-resizer-subcount) {
        .col-#{$sub-breakpoint} {
          flex-basis: 0;
          flex-grow: 1;
          max-width: 100%;
        }

        .col-#{$sub-breakpoint}-auto {
          flex: 0 0 auto;
          max-width: none; // Reset earlier grid tiers
          width: auto;
        }

        .flex-#{$sub-breakpoint}-row {
          flex-direction: row !important;
        }

        .flex-#{$sub-breakpoint}-column {
          flex-direction: column !important;
        }

        // these add responsive behaviour to forms, but have changed from vertical-at to
        // horizontal-above, so 'default' behaviour is vertical (see propertieseditform.html)
        .u-form-horizontal-above-#{$sub-breakpoint} {
          .form-group {
            .text-left .col-form-label,
            .col-form-label.text-left {
              text-align: right !important;
            }

            .col-form-label.border-left {
              border-bottom: 1px solid $border-color;
              border-left: 0 !important;
            }

            .btn-group.justify-content-start {
              justify-content: flex-end !important;
            }
          }
        }

        @for $i from 1 through $grid-columns {
          .col-#{$sub-breakpoint}-#{$i} {
            @include make-col($i, $grid-columns);
          }
        }
      }
      $u-parent-resizer-subcount: $u-parent-resizer-subcount + 1;
    }

    $u-parent-resizer-count: $u-parent-resizer-count + 1;
  }
}

.u-input-number__width-2 {
  width: 2.5rem;
}

.u-input-number__width-4 {
  width: 3.5rem;
}

.u-input__width-10 {
  width: 6.5rem !important;
}

// --------------------------------- Color Utilities --------------------------------- //
.u-bg-body {
  background-color: $body-bg;
}

.u-bg-body-offset,
.u-bg-body-offset__on-hover:hover {
  background-color: $u-theme-variables--bg-offset;
}

.u-btn-body-offset {
  @include button-variant($u-theme-variables--bg-offset, $u-theme-variables--bg-offset);
}

.u-bg-flyout {
  background-color: rgba($modal-content-bg, .95);
}

// For when you want a border for spacing but transparent
.u-border-color-transparent {
  border-color: transparent;
}

// For a border that appears when the element is hovered
.u-border-show-on-hover {
  border-color: transparent;
}

.u-border-show-on-hover:hover {
  border-color: $border-color;
}

.u-border-style__dashed {
  border-style: dashed !important;
}

// Used for buttons that are styled as form-controls borders
.u-border-color-input {
  border-color: $input-border-color !important;
}

// For all bootstrap colors, allow us to access them
// NOTE: Only useable for special items that require lots of colors. Use text-primary, etc for normal stuff
@each $color, $value in $colors {
  .u-text-#{$color} {
    color: $value;
  }
}


@each $color, $value in $colors {
  .u-bg-#{$color} {
    background-color: $value;
  }
}

// This extends bootstraps bg-<varents> to also have background colors
@mixin color-generator($color-map) {
  @each $color, $value in $color-map {
    .u-border-#{$color} {
      border-color: $value;
    }
  }

  @each $color, $value in $color-map {
    @include u-bg-color-content($color) {
      @include bg-text-variant($value);
    }
  }
}

@include color-generator($colors);
@include color-generator($theme-colors);


// ----------- Generic max sizes. Use with caution only when absoluted needed ----------- //
$somesizes: () !default;
$somesizes: map-merge((
    0: 0%,
    25: 25%,
    50: 50%,
    75: 75%
), $somesizes);

// (u-mh-25: max-height: 25%)
@each $prop, $abbrev in (width: w, height: h) {
  @each $size, $length in $somesizes {
    .u-m#{$abbrev}-#{$size} { max-#{$prop}: $length !important; }
  }
}

// (u-mvh-25: max-height: 25vh)
@each $prop, $abbrev in (width: w, height: h) {
  @each $size, $length in $somesizes {
    .u-mv#{$abbrev}-#{$size} { max-#{$prop}: #{$size}v#{$abbrev} !important; }
  }
}


// ----------- Hover edit utilities ----------- //
.u-hover-show {
  opacity: 0;
}

.u-hover-container:hover .u-hover-show {
  opacity: 1;
}

// ----------- Card utilities ------- //
.card {
  &.u-card-selected {
    .card-header {
      background-color: $list-group-active-bg;
      color: $list-group-active-color;
    }
  }

  // allow applying hover style programmatically
  &.u-card-highlight {
    .card-header {
      background-color: $list-group-hover-bg;
      color: $list-group-action-hover-color;
    }
  }

  // allow applying hover style on hover
  &.u-card-hover:hover {
    .card-header {
      background-color: $list-group-hover-bg;
      color: $list-group-action-hover-color;
    }
  }
}

.u-card-popup {
  @include border-radius($card-inner-border-radius $card-inner-border-radius 0 0);
  background: rgba($card-cap-bg, .6);
  margin-bottom: 0;
  right: .2rem;
  top: -1.3rem;
}

.u-progress__lg {
  font-size: round($progress-font-size * 2);
  height: $progress-height * 2;
}


// --------------------------------- Z-Index Utilities --------------------------------- //
.u-zindex-base {
  z-index: $u-zindex-base;
}


// --------------------------------- Icon Utilities ----------------------------------- //
.u-icon-display-small {
  height: 1.5rem;
  width: 1.5rem;
}


// --------------------------------- Aspect Ratios ----------------------------------- //
$aspect-ratios: ((16, 9), (4, 3));

@each $w, $h in $aspect-ratios {
  .u-aspect-ratio__#{$w}-#{$h} {
    max-width: $w / $h * 84vh;
    position: relative;
    width: 100%;

    &:after {
      content: '';
      display: block;
      padding-bottom: ($h / $w) * 100%;
    }

    > * {
      bottom: 0;
      height: 100%;
      position: absolute;
      top: 0;
      width: 100%;
    }
  }
}


// --------------------------------- Highlight Style -----------------------------------//
.u-highlight-text {
  @include bg-text-variant($yellow);
  background: $yellow;
  font-style: italic !important;
  font-weight: $font-weight-bold !important;
  text-shadow: none !important;
}

.u-object-fit-contain {
  object-fit: contain;
}

.u-object-position-top {
  object-position: top;
}

.u-object-position-top-left {
  object-position: top left;
}

.u-border-thick {
  border-width: ($border-width * 2) !important;
}


// --------------------------------- Corner Ribbons -----------------------------------//
.u-corner-ribbon {
  background: $warning;
  color: color-yiq($warning);
  left: -50px;
  letter-spacing: 1px;
  line-height: 50px;
  position: fixed;
  text-align: center;
  top: 25px;
  transform: rotate(-45deg);
  width: 200px;

  &.bottom-left {
    bottom: 25px;
    left: -50px;
    margin-bottom: 1rem;
    top: auto;
    transform: rotate(45deg);
  }

  &.bottom-right {
    bottom: 25px;
    left: auto;
    margin-bottom: 1rem;
    right: -50px;
    top: auto;
    transform: rotate(-45deg);
  }
}
